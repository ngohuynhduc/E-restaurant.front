"use client";

import { useState, useEffect } from "react";
import { ChevronRight } from "lucide-react";
import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation, Pagination } from "swiper/modules";

// Import Swiper styles
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";
import { useLocationStore } from "@/store/useLocationStore";
import { getImageUrl } from "@/lib/utils";
import Link from "next/link";

// Gi·∫£ l·∫≠p d·ªØ li·ªáu t·ª´ API
const restaurantData = [
  {
    id: 14,
    name: "Nesta Kawa Restaurant - H√†o Nam",
    address: "O Cho Dua Street, ƒê·ªëng ƒêa District, H√† N·ªôi, 10178, Vietnam",
    description:
      "Nesta Kawa Restaurant l√† nh√† h√†ng mang ƒë·∫≠m phong c√°ch ·∫©m th·ª±c truy·ªÉn th·ªëng Nh·∫≠t B·∫£n v·ªõi s·ª± h√≤a quy·ªán ƒë·ªôc ƒë√°o c·ªßa ƒëa d·∫°ng c√°c lo·∫°i m√≥n ƒë·∫∑c tr∆∞ng c·ªßa Nh·∫≠t, n·ªïi b·∫≠t trong ƒë√≥ l√† c√°c m√≥n chuy√™n h·∫£i s·∫£n ƒëang b∆°i v√† Sashimi, Sushi, Tempura, Yaki, Hotpot.",
    image: {
      public_id: "hjtggxdlnpritsydseqn",
      url: "https://res.cloudinary.com/dua8lsqda/image/upload/v1744385711/hjtggxdlnpritsydseqn.png",
    },
    price_min: 500000,
    price_max: 1000000,
  },
  {
    id: 13,
    name: "King BBQ",
    address: "Vincom Th√°i Nguy√™n, ƒê∆∞·ªùng L∆∞∆°ng Ng·ªçc Quy·∫øn, Th√°i Nguy√™n, Thai Nguyen 20000, Vietnam",
    description:
      'Chu·ªói King BBQ - Vua n∆∞·ªõng H√†n Qu·ªëc thu·ªôc t·∫≠p ƒëo√†n ·∫©m th·ª±c l·ªõn m·∫°nh RedSun ITI, n·ªïi b·∫≠t v·ªõi c√°c m√≥n th·ªãt n∆∞·ªõng th∆°m ngon c√πng c√¥ng th·ª©c "n∆∞·ªõc s·ªët King" ƒë·ªôc quy·ªÅn.',
    image: {
      public_id: "i5frrvpqpfp55rxkk49h",
      url: "https://res.cloudinary.com/dua8lsqda/image/upload/v1743519009/i5frrvpqpfp55rxkk49h.jpg",
    },
    price_min: 200000,
    price_max: 600000,
  },
  {
    id: 12,
    name: "Dookki",
    address:
      "L·∫ßu 3-08-09 t·∫ßng 3 t√≤a S1 TTTM Vincom Plaza Skylake, Ph·∫°m H√πng, M·ªπ ƒê√¨nh, Nam T·ª´ Li√™m, H√† N·ªôi",
    description:
      "Nh√† h√†ng Dookki H√† N·ªôi v·ªõi phong c√°ch ph·ª•c v·ª• buffet l·∫©u tteokbokki ƒë·ªôc ƒë√°o l√† ƒë·ªãa ch·ªâ y√™u th√≠ch c·ªßa nhi·ªÅu b·∫°n tr·∫ª.",
    image: {
      public_id: "tb9ng4scwznw3yripjf6",
      url: "https://res.cloudinary.com/dua8lsqda/image/upload/v1743307765/tb9ng4scwznw3yripjf6.jpg",
    },
    price_min: 129000,
    price_max: 349000,
  },
  {
    id: 11,
    name: "Yakimono",
    address: "Trung H√≤a",
    description: "GOOD",
    image: {
      public_id: "hfrntjzxcx556l8kcy5e",
      url: "https://res.cloudinary.com/dua8lsqda/image/upload/v1742992865/hfrntjzxcx556l8kcy5e.jpg",
    },
    price_min: 259000,
    price_max: 329000,
  },
];

// Format gi√° hi·ªÉn th·ªã
const formatPrice = (price) => {
  return new Intl.NumberFormat("vi-VN", {
    style: "currency",
    currency: "VND",
  }).format(price);
};

export default function SuggestRestaurants({ title = "Nh√† h√†ng g·∫ßn b·∫°n" }) {
  const [restaurants, setRestaurants] = useState(restaurantData);

  const {
    location: { latitude: lat, longitude: lng },
  } = useLocationStore();
  console.log("üöÄ ~ SuggestRestaurants ~ lat:", restaurants);

  useEffect(() => {
    const fetchRestaurants = async (query) => {
      try {
        const res = await fetch(
          `/api/restaurants?lat=${query.lat}&lng=${query.lng}&limit=4&sort=${query.sort}`,
          {
            method: "GET",
          }
        );
        const data = await res.json();
        setRestaurants(data?.data);
      } catch (err) {
        throw new Error(err);
      }
    };

    if (lat && lng && title === "Nh√† h√†ng g·∫ßn b·∫°n") {
      fetchRestaurants({ lat, lng });
    } else if (title === "Nh√† h√†ng hot!") {
      fetchRestaurants({ sort: "rating", lat: "", lng: "" });
    } else {
      fetchRestaurants({ lat: "", lng: "" });
    }
  }, [lat, lng, title]);

  return (
    <div className="w-full py-10">
      <div className="container mx-auto px-4">
        <div className="flex justify-between items-center border-b pb-4 border-gray-200">
          <h2 className="text-2xl font-bold text-gray-800">{title}</h2>
          <Link
            href="/restaurants"
            className="text-sm font-semibold text-[#FF9C00] hover:text-orange-600 flex items-center"
          >
            Xem th√™m
            <ChevronRight className="w-4 h-4 ml-1" />
          </Link>
        </div>

        <Swiper
          modules={[Navigation, Pagination]}
          spaceBetween={16}
          slidesPerView={3}
          navigation
          pagination={{ clickable: true }}
          className="restaurant-swiper"
          style={{
            "--swiper-navigation-color": "#FF9C00",
            "--swiper-pagination-color": "#FF9C00",
          }}
        >
          {restaurants.map((restaurant) => (
            <SwiperSlide key={restaurant.id}>
              <div className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow h-full">
                {/* Restaurant Image */}
                <div className="relative h-48 w-full overflow-hidden">
                  <img
                    src={getImageUrl(restaurant.image)}
                    alt={restaurant.name}
                    className="w-full h-full object-cover"
                  />
                </div>

                <div className="p-4">
                  <h3 className="font-bold text-lg text-gray-900 mb-1 truncate">
                    {restaurant.name}
                  </h3>
                  <p className="text-sm text-gray-500 mb-2 line-clamp-1">{restaurant.address}</p>
                  <div className="flex justify-between items-center">
                    <span className="text-[#FF9C00] font-medium">
                      {formatPrice(restaurant.price_min)} - {formatPrice(restaurant.price_max)}
                    </span>
                  </div>
                </div>
              </div>
            </SwiperSlide>
          ))}
        </Swiper>

        <style jsx global>{`
          .restaurant-swiper {
            padding: 20px 0;
          }
          .swiper-pagination-fraction,
          .swiper-pagination-custom,
          .swiper-horizontal > .swiper-pagination-bullets,
          .swiper-pagination-bullets.swiper-pagination-horizontal {
            bottom: -5px;
          }
          .restaurant-swiper .swiper-button-next,
          .restaurant-swiper .swiper-button-prev {
            background-color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
          }

          .restaurant-swiper .swiper-button-next:after,
          .restaurant-swiper .swiper-button-prev:after {
            font-size: 18px;
          }

          .restaurant-swiper .swiper-pagination-bullet-active {
            background-color: #ff9c00;
          }
        `}</style>
      </div>
    </div>
  );
}
